@model AppCore.DTOs.TicketDTO

<div class="container">
    <h2>Edit Ticket</h2>
    
    @if (!string.IsNullOrEmpty(TempData["Error"]?.ToString()))
    {
        <div class="alert alert-danger">
            @TempData["Error"]
        </div>
    }

    <div class="row">
        <div class="col-md-6">
            <form asp-action="EditTicket" method="post">
                @Html.AntiForgeryToken()
                
                <input type="hidden" asp-for="TicketId" />
                <input type="hidden" asp-for="SessionId" />
                <input type="hidden" asp-for="BookingTime" />
                <input type="hidden" asp-for="MovieTitle" />
                <input type="hidden" asp-for="UserName" />
                <input type="hidden" asp-for="ShowTime" />
                <input type="hidden" asp-for="HallId" />
                <input type="hidden" asp-for="HallName" />

                <div class="mb-3">
                    <label class="form-label">Movie: @(Model.MovieTitle ?? "N/A")</label>
                </div>

                <div class="mb-3">
                    <label class="form-label">User: @(Model.UserName ?? "N/A")</label>
                </div>

                <div class="mb-3">
                    <label class="form-label">Show Time: @Model.ShowTime.ToString("g")</label>
                </div>

                <div class="mb-3">
                    <label class="form-label">Hall: @(Model.HallName ?? "N/A")</label>
                </div>

                <div class="mb-3">
                    <label asp-for="RowNumber" class="form-label">Row Number</label>
                    <input asp-for="RowNumber" class="form-control" required />
                    <small class="form-text text-muted">
                        Enter a valid row number according to the hall configuration.
                    </small>
                    <span asp-validation-for="RowNumber" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="SeatNumber" class="form-label">Seat Number</label>
                    <input asp-for="SeatNumber" class="form-control" required />
                    <small class="form-text text-muted">
                        Enter a valid seat number according to the hall configuration.
                    </small>
                    <span asp-validation-for="SeatNumber" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Status" class="form-label">Status</label>
                    <select asp-for="Status" class="form-select" required>
                        <option value="Booked">Booked</option>
                        <option value="Cancelled">Cancelled</option>
                        <option value="Used">Used</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <a asp-action="ManageTickets" class="btn btn-secondary">Back to List</a>
                </div>

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <ul>
                            @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@modelError.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const rowInput = document.getElementById('RowNumber');
            const seatInput = document.getElementById('SeatNumber');
            
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Базова валідація
                if (!rowInput.value || !seatInput.value) {
                    alert('Please fill in all required fields.');
                    return;
                }

                // Перевірка на числові значення
                const row = parseInt(rowInput.value);
                const seat = parseInt(seatInput.value);
                
                if (isNaN(row) || isNaN(seat) || row <= 0 || seat <= 0) {
                    alert('Row and seat numbers must be positive integers.');
                    return;
                }

                // Якщо всі перевірки пройдені, відправляємо форму
                form.submit();
            });
        });
    </script>
} 